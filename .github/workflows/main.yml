name: Build and Publish .NET Code (Windows)

on:
  workflow_dispatch:

jobs:
  build-publish:
    runs-on: windows-latest  # Use the Windows runner
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Cache NuGet packages
      uses: actions/cache@v2
      with:
        path: ${{ env.NUGET_PACKAGES }}
        key: nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: nuget-
        
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Clean NuGet packages
      run: nuget locals all -clear

    - name: Restore NuGet packages
      run: nuget restore
      
    - name: Restore dependencies
      run: msbuild /restore
      

    - name: Build Solution
      run: |
        msbuild.exe /nologo /nr:false /p:DeployOnBuild=true /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem /p:DeleteExistingFiles=True /p:platform="Any CPU" /p:configuration="Release" /p:PublishUrl="../_build"
        

    - name: Set artifact name
      id: artifact-name
      run: echo "::set-output name=name::Build-$(date +%Y%m%d)"

    - name: Publish artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.artifact-name.outputs.name }}
        path: "./_build"
    - name: Copy artifact to remote machine
      env:
        ARTIFACT_NAME: ${{ steps.artifact-name.outputs.name }}
        REMOTE_MACHINE: "34.217.42.230"  # Replace with the actual remote machine address
        REMOTE_USER: "Administrator"    # Replace with the actual remote username
        REMOTE_PASSWORD: ${{ secrets.REMOTE_PASSWORD }}  # Store the remote password as a secret
      run: |
        $securePassword = ConvertTo-SecureString -String $env:REMOTE_PASSWORD -AsPlainText -Force
        $credential = New-Object System.Management.Automation.PSCredential ($env:REMOTE_USER, $securePassword)
        Invoke-Command -ComputerName $env:REMOTE_MACHINE -Credential $credential -ScriptBlock {
          param($artifactName)
          Copy-Item -Path "d:\mybuildfiles2023\publish\$artifactName" -Destination "C:\$artifactName"
        } -ArgumentList $env:ARTIFACT_NAME
