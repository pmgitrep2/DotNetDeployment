name: Comp Flow

on:
  workflow_dispatch:

env:
  SOURCE_FOLDER: "C:/DeploymentFiles/VersionFolder"
  DESTINATION_FOLDER: "C:/DeploymentFiles/ReleaseFolder"

jobs:
  build-publish:
    runs-on: windows-latest  # Use the Windows runner
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Cache NuGet packages
      uses: actions/cache@v2
      with:
        path: ${{ env.NUGET_PACKAGES }}
        key: nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: nuget-
        
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Clean NuGet packages
      run: nuget locals all -clear

    - name: Restore NuGet packages
      run: nuget restore
      
    - name: Restore dependencies
      run: msbuild /restore
      

    - name: Build Solution
      run: |
        msbuild.exe /nologo /nr:false /p:DeployOnBuild=true /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem /p:DeleteExistingFiles=True /p:platform="Any CPU" /p:configuration="Release" /p:PublishUrl="../_build"
        

    - name: Set artifact name
      id: artifact-name
      run: echo "::set-output name=name::Build-$(date +%Y%m%d)"

    - name: Publish artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.artifact-name.outputs.name }}
        path: "./_build"
  
  Copy-file-git-lighsail:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: artifact-name
      - name: Display Artifact Name
        run: echo "Artifact name: ${{ github.workspace }}/${{ steps.artifact-name.outputs.name }}"

      - name: Install sshpass dependency for ssh access
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      - name: Create ~/.ssh directory for storing known hosts
        run: mkdir -p ~/.ssh

      - name: Update known_hosts file with the server ip to avoid fingerprint ask
        run: |
          WINDOWS_SERVER_IP="3.110.130.37"
          echo "$WINDOWS_SERVER_IP $(ssh-keyscan -t rsa $WINDOWS_SERVER_IP 2>&1)" >> ~/.ssh/known_hosts

      - name: copy the latest files at C drive
        run: |
          # Replace the placeholders with actual values
          WINDOWS_SERVER_USER="Administrator"
          WINDOWS_SERVER_IP="3.110.130.37"
          sshpass -vvv -p 'akqR3XeigseYHlWxD$T8ZtpWu&T*BkJm' scp -o StrictHostKeyChecking=no ${{ steps.artifact-name.outputs.name }} Administrator@3.110.130.37:"${{ env.SOURCE_FOLDER }}"


  # Stop-IIS:
  #   name: Stop-IIS 
  #   needs: Copy-file-git-lighsail
  #   runs-on: ubuntu-latest
  #   if: success() 
  #   steps:
  #     - uses: actions/checkout@v3.0.0
        
  #     - run: |
  #         # Replace the placeholders with actual values
  #         WINDOWS_SERVER_USER="Administrator"
  #         WINDOWS_SERVER_IP="3.110.130.37"
  #         REM_FOLDER="C:/test2"
  #         sshpass -vvv -p 'akqR3XeigseYHlWxD$T8ZtpWu&T*BkJm' ssh -o StrictHostKeyChecking=no "$WINDOWS_SERVER_USER@$WINDOWS_SERVER_IP" "powershell -Command \"Stop-Service -Name W3SVC; Get-Service -Name W3SVC\""
 
  # Remove-old-files:
  #   name: Remove-old-files-from-intepub-location
  #   needs: Stop-IIS
  #   runs-on: ubuntu-latest
  #   if: success() 
  #   steps:
  #     - uses: actions/checkout@v3.0.0
        
  #     - run: |
  #         # Replace the placeholders with actual values
  #         WINDOWS_SERVER_USER="Administrator"
  #         WINDOWS_SERVER_IP="3.110.130.37"
  #         REM_FOLDER="C:/test2"
  #         sshpass -vvv -p 'akqR3XeigseYHlWxD$T8ZtpWu&T*BkJm' ssh -o StrictHostKeyChecking=no "$WINDOWS_SERVER_USER@$WINDOWS_SERVER_IP" "powershell -Command \"Get-ChildItem -Path '$REM_FOLDER' -File | Where-Object { \$_.Name -ne 'config.txt' } | Remove-Item -Force\""

  # Copy-new-files:
  #   name: copy-new-files-to-intepub-location
  #   needs: Remove-old-files
  #   runs-on: ubuntu-latest
  #   if: success() 
  #   steps:
  #     - uses: actions/checkout@v3.0.0
        
  #     - run: |
  #         # Replace the placeholders with actual values
  #         WINDOWS_SERVER_USER="Administrator"
  #         WINDOWS_SERVER_IP="3.110.130.37"
  #         SOURCE_FOLDER="C:/test3"
  #         DESTINATION_FOLDER="C:/test2/"
  #         sshpass -vvv -p 'akqR3XeigseYHlWxD$T8ZtpWu&T*BkJm' ssh -o StrictHostKeyChecking=no "$WINDOWS_SERVER_USER@$WINDOWS_SERVER_IP" "powershell -Command \"\$latestFile = Get-ChildItem -Path '$SOURCE_FOLDER' | Sort-Object LastWriteTime -Descending | Select-Object -First 1; Copy-Item -Path \$latestFile.FullName -Destination '$DESTINATION_FOLDER'\""

  # Start-IIS:
  #   name: Start-IIS
  #   needs: Copy-new-files
  #   runs-on: ubuntu-latest
  #   if: success() 
  #   steps:
  #     - uses: actions/checkout@v3.0.0
        
  #     - run: |
  #         # Replace the placeholders with actual values
  #         WINDOWS_SERVER_USER="Administrator"
  #         WINDOWS_SERVER_IP="3.110.130.37"
  #         sshpass -vvv -p 'akqR3XeigseYHlWxD$T8ZtpWu&T*BkJm' ssh -o StrictHostKeyChecking=no "$WINDOWS_SERVER_USER@$WINDOWS_SERVER_IP" "powershell -Command \"Start-Service -Name W3SVC; Get-Service -Name W3SVC\""
